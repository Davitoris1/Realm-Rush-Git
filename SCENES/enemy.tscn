[gd_scene load_steps=5 format=3 uid="uid://dt4a1wtby4dp4"]

[ext_resource type="Texture2D" uid="uid://d2b6gvh2xevft" path="res://icon.svg" id="1_glu8x"]

[sub_resource type="GDScript" id="GDScript_ly1qn"]
script/source = "extends CharacterBody2D


const SPEED = 100.0
const JUMP_VELOCITY = -400.0
var direction = 1
@onready var sprite_2d: AnimatedSprite2D = $AnimatedSprite2D
@onready var collision: CollisionShape2D = $CollisionShape2D
@onready var raycast_right = $RayCast2D_Right
@onready var raycast_left = $RayCast2D_Left

func _ready() -> void:
	var faceway = randi_range(0,1)
	if faceway==0:
		direction = -1
	if faceway==1:
		direction=1

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta
		
	#change direction on hit wall
	if (direction == 1 and raycast_right.is_colliding()) or (direction == -1 and raycast_left.is_colliding()):
		direction *= -1
		

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	if direction == -1:
		sprite_2d.flip_h = true
	else:
		sprite_2d.flip_h = false
		
	velocity.x = direction * SPEED
	
	move_and_slide()
"

[sub_resource type="SpriteFrames" id="SpriteFrames_7lvep"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_glu8x")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_ri6yh"]
radius = 21.0

[node name="Enemy" type="CharacterBody2D"]
script = SubResource("GDScript_ly1qn")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.34375, 0.34375)
sprite_frames = SubResource("SpriteFrames_7lvep")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_ri6yh")

[node name="RayCast2D_Right" type="RayCast2D" parent="."]
target_position = Vector2(23, 0)

[node name="RayCast2D_Left" type="RayCast2D" parent="."]
target_position = Vector2(-23, 0)
